const fs = require('fs');
const { google } = require('googleapis');
const axios = require('axios');
const key = require('./service_account.json');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ URL
const isValidUrl = (url) => {
    try {
        new URL(url);
        return true;
    } catch {
        return false;
    }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–¥–µ—Ä–∂–∫–∏
const delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–¥–Ω–æ–≥–æ URL
async function processUrl(url, jwtClient) {
    try {
        const tokens = await jwtClient.authorize();

        const response = await axios.post(
            'https://indexing.googleapis.com/v3/urlNotifications:publish',
            {
                url: url,
                type: 'URL_UPDATED',
            },
            {
                headers: {
                    'Content-Type': 'application/json',
                    Authorization: `Bearer ${tokens.access_token}`,
                },
            }
        );

        console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω URL: ${url}`);
        return response.data;
    } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ URL ${url}:`, error.message);
        return null;
    }
}

async function main() {
    try {
        // –ß—Ç–µ–Ω–∏–µ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–∞–π–ª–∞
        const urls = fs
            .readFileSync('urls.txt', 'utf8')
            .split('\n')
            .map((url) => url.trim())
            .filter((url) => url && isValidUrl(url));

        if (urls.length === 0) {
            throw new Error('–ù–µ—Ç –≤–∞–ª–∏–¥–Ω—ã—Ö URL –≤ —Ñ–∞–π–ª–µ');
        }

        console.log(`üìù –ù–∞–π–¥–µ–Ω–æ ${urls.length} URL –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏`);

        const jwtClient = new google.auth.JWT(
            key.client_email,
            null,
            key.private_key,
            ['https://www.googleapis.com/auth/indexing'],
            null
        );

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ URL —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
        for (const url of urls) {
            await processUrl(url, jwtClient);
            // –ó–∞–¥–µ—Ä–∂–∫–∞ 2 —Å–µ–∫—É–Ω–¥—ã –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
            await delay(1000);
        }

        console.log('‚ú® –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    } catch (error) {
        console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
        process.exit(1);
    }
}

main();
